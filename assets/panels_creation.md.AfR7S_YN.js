import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.tuuL-SzM.js";const c=JSON.parse('{"title":"Panel creation","description":"","frontmatter":{},"headers":[],"relativePath":"panels/creation.md","filePath":"panels/creation.md"}'),n={name:"panels/creation.md"};function l(p,s,h,o,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="panel-creation" tabindex="-1">Panel creation <a class="header-anchor" href="#panel-creation" aria-label="Permalink to &quot;Panel creation&quot;">​</a></h1><h4 id="panels-can-be-created-with-simple-html-files-for-better-styling-you-can-use-css-and-if-you-feel-like-it-you-can-add-your-custom-js-for-more-custom-functions" tabindex="-1">Panels can be created with simple HTML files. For better styling you can use CSS and if you feel like it you can add your custom JS for more custom functions. <a class="header-anchor" href="#panels-can-be-created-with-simple-html-files-for-better-styling-you-can-use-css-and-if-you-feel-like-it-you-can-add-your-custom-js-for-more-custom-functions" aria-label="Permalink to &quot;Panels can be created with simple HTML files. For better styling you can use CSS and if you feel like it you can add your custom JS for more custom functions.&quot;">​</a></h4><hr><p> </p><div class="info custom-block"><p class="custom-block-title">DISCLAIMER</p><p>To create a panel basic knowledge of HTML, CSS and JSON is needed.</p></div><h3 id="how-to-create-a-panel" tabindex="-1">How to create a panel <a class="header-anchor" href="#how-to-create-a-panel" aria-label="Permalink to &quot;How to create a panel&quot;">​</a></h3><ol><li><p>Create a subdirectory in the <strong>panels</strong> folder.</p><p>The directory name will be used as the panel name if the name is not defined in the <strong>panel.json</strong></p><p><em>Example: Directory: &quot;Panel_name&quot; will become &quot;Panel name&quot; in the application.</em></p></li></ol><p> </p><ol start="2"><li><p>Create the following file structure:</p><div class="language-Directory vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Directory</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Panel_name</span></span>
<span class="line"><span>|- index.html</span></span>
<span class="line"><span>|- output.css</span></span>
<span class="line"><span>|- panel.json</span></span></code></pre></div><details class="details custom-block"><summary>index.html</summary><p>This is the file that is used as a button panel. If you want to use custom JS, add script tags at the bottom of the body tag.</p></details><details class="details custom-block"><summary>output.css</summary><p>This file is loaded with the index.html and can contain custom panel styling.</p></details><details class="details custom-block"><summary>panel.json</summary><p>This file contains basic information about the pael.</p></details><p> </p></li><li><p>You can save panel information in the panel.json file.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be removed in later updates.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Panel name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will overwrite panel directory name.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lorem ipsum.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be displayed on the panel overview page.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;aspectRatio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10/20&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be used for scaling.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;macros&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be filled by the application.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p> </p></li><li><p>Create your desired button panel with HTML elements and style them with CSS.</p><p><em>A better explanation about creating panel layouts will be added later.</em></p><p> </p></li><li><p>To turn an element into a trigger 2 things need to be present.</p><p>An <strong>ID attribute</strong> and an <strong>mcrm__button attribute</strong>.</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button_1&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mcrm__button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Example button&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>*The ID will be used as to link the element to the specified macro. This link will be saved in <strong>panel.json*</strong></p><p> </p></li><li><p>It&#39;s also possible to use dialogs in the button panel itself.</p><p>A couple of things are needed for the dialog triggers to work.</p><p>A dialog trigger element:</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dialog-trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#example-dialog&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mcrm__dialog-trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Open Dialog</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>And a dialog element:</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dialog</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example-dialog&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mcrm__dialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- Dialog content --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Dialogs can be closed by clicking/tapping outside the dialog. Or a close element can be used. <strong>This element should be inside of the dialog element.</strong></p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dialog__close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol>`,9)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
